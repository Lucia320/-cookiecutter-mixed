
# cookiecutter is command-line utility to create projects from templates
# https://github.com/cookiecutter/cookiecutter
#
# --no-input      Do not prompt for parameters and only use
#                 cookiecutter.json file content
#
# --output-dir    Where to output the generated project dir into
# - name: Install dependencies
#   run: pip install cookiecutter
# - name: Setup tools
#   uses: ./.github/actions/tools
# Pending to create folder build

name: "build-cookiecuter"
description: "Run the cookiecutter commands"
author: Lucia Valencia

inputs:
  is_main:
    description: "The build is the main cookiecutter"
    required: false
  app_name:
    description: "The name of the main app_name '{{ cookiecutter.app_name }}"
    required: true
  template:
    description: "The name of the template, for example 'infraestructure'"
    required: true
  working_directory:
    description: Main folder `cookiecutter build folder`
    required: false

runs:
  using: composite
  steps:
    - name: Install requirements
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        pip3 install -r requirements.txt

    - name: Build using template
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        if ${{ inputs.is_main }} ; then
          echo "INFO init build Template> ${{ inputs.template}} "
          echo "INFO main folder>"
          rm -rf ${{ inputs.working_directory}}/build
          pwd
          echo "INFO execute cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml --no-input --output-dir ${{ inputs.working_directory}}/build ${{ inputs.working_directory}}/${{ inputs.template}}"
          cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml --no-input --output-dir ${{ inputs.working_directory}}/build ${{ inputs.working_directory}}/${{ inputs.template}}
          echo "cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml  --no-input --output-dir build ${{ inputs.working_directory}}/cookiecutter-java"
          echo "INFO The folder was generated in folder build"
          ls
          echo "INFO The process is finish"
      else
          echo "INFO init build Template> ${{ inputs.template}} "
          echo "INFO dependency folder>"
          echo "INFO build dependency ${{ inputs.template}}"
          rm -rf ${{ inputs.working_directory}}/build/dependency
          echo "================================="
          echo "INFO files dependency"
          pwd
          echo "INFO execute cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml --no-input --output-dir ${{ inputs.working_directory}}/build/dependency ${{ inputs.working_directory}}/${{ inputs.template}}"
          cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml  --no-input --output-dir ${{ inputs.working_directory}}/build/dependency ${{ inputs.working_directory}}/${{ inputs.template}}
          echo "cookiecutter --config-file /cookiecutter/cookiecutter-config.yaml  --no-input --output-dir ${{ inputs.working_directory}}/build/dependency ${{ inputs.working_directory}}/${{ inputs.template}}"
          echo "INFO The folder was generated in folder build/dependency"
          ls
          echo "INFO copy cp -R ${{ inputs.working_directory}}/build/dependency/${{ inputs.app_name}} ${{ inputs.working_directory}}/build/${{ inputs.app_name}}"
          cp -R ${{ inputs.working_directory}}/build/dependency/${{ inputs.app_name}} ${{ inputs.working_directory}}/build
          echo "================================="
      fi

    - name: Notification cookiecutter 
      shell: bash
      working-directory: .
      run: |
        echo "Ruta de la creacion"
        pwd
        echo "Archivos generados"
        ls
        echo "Ingresando a la app"
        cd ${{ inputs.app_name }}
        ls
        echo "Terminando la creacion"
         
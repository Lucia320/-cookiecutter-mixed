
# cookiecutter is command-line utility to create projects from templates
# https://github.com/cookiecutter/cookiecutter
#
# --no-input      Do not prompt for parameters and only use
#                 cookiecutter.json file content
#
# --output-dir    Where to output the generated project dir into
# - name: Install dependencies
#   run: pip install cookiecutter
# - name: Setup tools
#   uses: ./.github/actions/tools
# Pending to create folder build

name: "build-cookiecuter"
description: "Run the cookiecutter commands"
author: Lucia Valencia

inputs:
  is_main:
    description: "The build is the main cookiecutter"
    required: true
  repo_name:
    description: "The name of the repo_name, for example 'infraestructure'"
    required: true
  template:
    description: "The name of the template, for example 'infraestructure'"
    required: true
  working_directory:
    description: Main folder `cookiecutter build folder`
    required: false

runs:
  using: composite
  steps:
    - name: Install requirements
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        pip3 install -r requirements.txt

    - name: Build using template
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      run: |
        echo "build 'repo_name' ${{ inputs.repo_name }} and template  ${{ inputs.template }}"
        if [[ ! ${{ inputs.is_main }} ]]; then
          find ./ -maxdepth 1 \
            ! -name '${{ inputs.repo_name }}' \
            ! -name '.' \
            ! -exec rm -rf {} +
          echo "Ruta de la creacion"
          pwd
          echo "Archivos generados"
          ls
          cookiecutter --no-input --output-dir ./${{ inputs.repo_name }} ${{ inputs.template }}
        else
          echo "build dependency ${{ inputs.template }}"
          find ./ -maxdepth 1 \
            ! -name 'build-${{ inputs.template }}' \
            ! -name '.' \
            ! -exec rm -rf {} +
          echo "Ruta de la creacion"
          pwd
          echo "Archivos generados"
          ls
          cookiecutter --no-input --output-dir ./build-${{ inputs.template }} ${{ inputs.template }}
          cp -R ./build-${{ inputs.template }} ./${{ inputs.repo_name }}
        fi
    - name: Notification cookiecutter 
      shell: bash
      working-directory: .
      run: |
        echo "Ruta de la creacion"
        pwd
        echo "Archivos generados"
        ls
        echo "Ingresando a la app"
        cd ${{ inputs.repo_name }}
        ls
        echo "Terminando la creacion"
         